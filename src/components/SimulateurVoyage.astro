---
import garesAvecActivitesData from "../assets/garesAvecActivites.json";

const regionsUniques = [
    "Toutes",
    ...new Set(
        garesAvecActivitesData
            .map((d: any) => d.region)
            .filter((r: string) => r !== "Non définie"),
    ),
].sort();
---

<div class="w-full max-w-7xl mx-auto">
    <div class="card-body">
        <h3 class="card-title text-2xl mb-4">
            🎯 Personnalisez votre recherche
        </h3>

        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div class="form-control w-full">
                <label class="label">
                    <span class="label-text font-semibold text-lg"
                        >🗺️ Région</span
                    >
                </label>
                <select
                    id="region-select"
                    class="select select-bordered w-full"
                >
                    {
                        regionsUniques.map((region) => (
                            <option
                                value={region}
                                selected={region === "Toutes"}
                            >
                                {region}
                            </option>
                        ))
                    }
                </select>
            </div>

            <div class="form-control w-full">
                <label class="label">
                    <span class="label-text font-semibold text-lg"
                        >✨ Points d'intérêt minimum</span
                    >
                    <span
                        class="label-text-alt badge badge-primary"
                        id="seuil-value">50</span
                    >
                </label>
                <input
                    type="range"
                    id="seuil-poi"
                    min="0"
                    max="300"
                    step="10"
                    value="50"
                    class="range range-primary"
                />
                <div
                    class="w-full flex justify-between text-xs px-2 mt-2 opacity-60"
                >
                    <span>0</span>
                    <span>150</span>
                    <span>300</span>
                </div>
            </div>

            <div class="form-control w-full">
                <label class="label">
                    <span class="label-text font-semibold text:lg"
                        >🚉 Nombre de gares</span
                    >
                    <span
                        class="label-text-alt badge badge-secondary"
                        id="nombre-value">10</span
                    >
                </label>
                <input
                    type="range"
                    id="nombre-gares"
                    min="1"
                    max="20"
                    step="1"
                    value="10"
                    class="range range-secondary"
                />
                <div
                    class="w-full flex justify-between text-xs px-2 mt-2 opacity-60"
                >
                    <span>1</span>
                    <span>10</span>
                    <span>20</span>
                </div>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-xl shadow-lg p-6 overflow-x-auto">
        <div class="card-body">
            <div id="map-container" class="w-full overflow-x-auto"></div>
        </div>
    </div>
    <p class="mt-8 mb-4 text-sm text-info italic">
        Total des points d’intérêt touristiques par région (filtrable par nombre
        de gares)
    </p>

    <p
    class="mt-6 text-sm text-info italic border-t border-base-300 pt-4"
                >
                    Sources : Base Gares & Data Tourisme – data.gouv.fr •
                    <code>garesAvecActivites</code> et <code>garesFiltrees</code
                    > (POI par gare et filtres dynamiques)
                </p>

    <div class="alert alert-success bg-secondary mt-14">
        <svg
            xmlns="http://www.w3.org/2000/svg"
            class="stroke-current shrink-0 h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            aria-hidden="true"
        >
            <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
            ></path>
        </svg>
        <div>
            <h3 class="font-bold">Comment utiliser la carte ?</h3>
            <div class="text-sm">
                <ul class="list-disc list-inside mt-2">
                    <li>Sélectionnez une région pour filtrer les gares affichées.</li>
                    <li>Ajustez le seuil de points d'intérêt pour n'afficher que les gares pertinentes.</li>
                    <li>Modifiez le nombre de gares pour limiter les résultats visibles sur la carte.</li>
                    <li>Survolez un marqueur pour voir les détails ; les 5 premiers sont étiquetés.</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<script>
    import * as Plot from "@observablehq/plot";
    import * as d3 from "d3";
    import garesAvecActivitesData from "../assets/garesAvecActivites.json";
    import departementsgeojsonData from "../assets/departementsgeojson.json";

    const garesAvecActivites = garesAvecActivitesData;
    const departementsgeojson = departementsgeojsonData;

    let regionSelectionnee = "Toutes";
    let seuilPOI = 50;
    let nombreGaresMax = 10;

    function filtrerGares() {
        let resultats = garesAvecActivites
            .filter((d: any) => d.region !== "Non définie")
            .filter((d: any) => d.nombrePOI >= seuilPOI);

        if (regionSelectionnee !== "Toutes") {
            resultats = resultats.filter(
                (d: any) => d.region === regionSelectionnee,
            );
        }

        return resultats
            .sort((a: any, b: any) => b.nombrePOI - a.nombrePOI)
            .slice(0, nombreGaresMax);
    }

    function createMap() {
        const container = document.getElementById("map-container");
        if (!container) return;

        container.innerHTML = "";

        const garesFiltrees = filtrerGares();

        if (garesFiltrees.length === 0) {
            container.innerHTML = `
                <div class="flex flex-col items-center justify-center py-16 bg-base-200 rounded-xl">
                    <div class="text-6xl mb-4">🔍</div>
                    <h3 class="text-xl font-bold mb-2">Aucun résultat</h3>
                    <p class="text-base-content/60">Essayez de modifier vos critères de recherche</p>
                </div>
            `;
            return;
        }

        const plot = Plot.plot({
            width: 1000,
            height: 700,
            marginTop: 60,
            marginRight: 220,
            marginBottom: 80,
            marginLeft: 80,
            style: {
                fontSize: "15px",
                fontFamily: "system-ui, -apple-system, sans-serif",
                background: "transparent",
            },
            projection: {
                type: "mercator",
                domain: departementsgeojson,
            },
            color: {
                type: "linear",
                domain: [
                    d3.min(garesFiltrees, (d: any) => d.nombrePOI),
                    d3.max(garesFiltrees, (d: any) => d.nombrePOI),
                ],
                range: ["#ffd93d", "#d32f2f"],
                legend: true,
                label: "Points d'intérêt",
            },
            marks: [
                Plot.geo(departementsgeojson, {
                    fill: "#f5f5f5",
                    stroke: "#ddd",
                    strokeWidth: 0.5,
                }),

                Plot.dot(garesFiltrees, {
                    x: "longitude",
                    y: "latitude",
                    r: (d: any) => Math.sqrt(d.nombrePOI) * 2,
                    fill: "nombrePOI",
                    fillOpacity: 0.8,
                    stroke: "white",
                    strokeWidth: 2.5,
                    tip: true,
                    title: (d: any) =>
                        `🚉 ${d.nom}\n━━━━━━━━━━━━━━━━━\n📍 ${d.region}\n🎯 ${
                            d.nombrePOI
                        } points d'intérêt\n✨ Classement: #${garesFiltrees.indexOf(d) + 1}`,
                }),

                Plot.text(garesFiltrees.slice(0, 5), {
                    x: "longitude",
                    y: "latitude",
                    text: "nom",
                    dy: -25,
                    fontSize: 11,
                    fontWeight: "700",
                    fill: "#d32f2f",
                    stroke: "white",
                    strokeWidth: 4,
                    paintOrder: "stroke",
                    textAnchor: "middle",
                }),
            ],
        });

        container.appendChild(plot);
    }

    document.addEventListener("DOMContentLoaded", () => {
        createMap();

        const regionSelect = document.getElementById(
            "region-select",
        ) as HTMLSelectElement;
        regionSelect?.addEventListener("change", (e) => {
            regionSelectionnee = (e.target as HTMLSelectElement).value;
            createMap();
        });

        const seuilRange = document.getElementById(
            "seuil-poi",
        ) as HTMLInputElement;
        const seuilValue = document.getElementById("seuil-value");
        seuilRange?.addEventListener("input", (e) => {
            seuilPOI = parseInt((e.target as HTMLInputElement).value);
            if (seuilValue) seuilValue.textContent = seuilPOI.toString();
            createMap();
        });

        const nombreRange = document.getElementById(
            "nombre-gares",
        ) as HTMLInputElement;
        const nombreValue = document.getElementById("nombre-value");
        nombreRange?.addEventListener("input", (e) => {
            nombreGaresMax = parseInt((e.target as HTMLInputElement).value);
            if (nombreValue)
                nombreValue.textContent = nombreGaresMax.toString();
            createMap();
        });
    });
</script>
